BDD?
- It is a mixture of Domain Driven design and Test Driven Development. So it brings business and Technology together.

> Installing Cucumber:
Install Cucumber-java, cucumber-junit, cucumber-core from maven central (add their dependencies)
Refresh the Maven project

> Steps to write a test using Cucumber
# Writing a feature file
Create a package named feature which will contain all the feature files to be used in the project
Add a file with name.feature (E.g Login.feature means feature file for testing login functionality)
It will automatically download cucumber-java and Gherkin (Dont install substeps)
Restart intelliJ
Each feature file contains only one feature
Feature files use Gherkin language
A feature may have given different scenarios
Scenarios use Given-When-Then structure.
E.g.

Feature: Test the login functionality on Guru99 bank website
  Scenario: The user should be able to login with correct username and password
    Given user is on the login page                             // Pre-condition
    When user enters correct username and correct password      // Action
    Then User gets confirmation                                 // Assertion

We can add scenario outline in feature file which means we can pass parameterized data through it.
E.g.
Scenario Outline: user should be able to login
     Given user is on the login page
     When user enters <username>                <- angular braces means we can pass value in them
     And user enters <password>
     And user clicks submit button
     Then user gets confirmation

    Examples:
     | username | password |
     | "mngr265692" | "amApUbu" |               <- adding our parameter values
     | "user" | "amApUbu" |
     | "mngr265692" | "pwd" |
     | "himshim" | "jimjam" |


# Steps Implementation
Create a package named stepImplementation. In this package we will write all our code.
(Tip: If you do not get package in create - > new menu, mark the folder in which you want the package as Sources root by right click on the folder -> Mark Directory as -> Sources Root. You will get package create option).
Write the test cases with the Given-When-Then annotations
E.g.
package stepImplementation;

import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import org.openqa.selenium.WebDriver;

public class BDDloginTest {

    WebDriver driver;

    @Given("^user is on the login page$")
    public void user_is_on_the_login_page() {
        // Enter the code
    }

    @When("^user enters correct username and correct password$")
    public void user_enters_correct_username_and_correct_password() {
         // Enter the code
    }

    @Then("^User gets confirmation$")
    public void User_gets_confirmation() {
         // Enter the code
    }
}


# Writing the TestRunner with JUnit
Create a package named cucumberTests
Create a java class file e.g LognTestRunner

Write a class level annotation
@RunWith(Cucumber.class)
@CucumberOptions(features = "feature package path/features", glue = "stepImplementation package path/stepImplementation")
public class ..........

